#include <stdio.h>

int main(void) {
    float A[2][2] = { {2, 5}, {8, 9} };
    float B[2][2] = { {7, 8}, {9, 41} };
    float invB[2][2], R[2][2];
    float det = B[0][0]*B[1][1] - B[0][1]*B[1][0];

    if (det == 0.0f) {
        printf("Matrix B is singular and cannot be inverted.\n");
        return 1;
    }

    float inv = 1.0f / det;
    invB[0][0] =  B[1][1] * inv;
    invB[0][1] = -B[0][1] * inv;
    invB[1][0] = -B[1][0] * inv;
    invB[1][1] =  B[0][0] * inv;

    for (int i = 0; i < 2; i++) {
        for (int j = 0; j < 2; j++) {
            R[i][j] = A[i][0] * invB[0][j] + A[i][1] * invB[1][j];
        }
    }

    printf("A × B⁻¹ =\n");
    for (int i = 0; i < 2; i++) {
        printf("%.2f  %.2f\n", R[i][0], R[i][1]);
    }

    return 0;
}
